[{"path":[]},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to CRiSp","title":"Contributing to CRiSp","text":"outlines propose change CRiSp. detailed discussion contributing packages, please see tidyverse development contributing guide code review principles.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to CRiSp","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to CRiSp","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to CRiSp","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"CityRiverSpaces/CRiSp\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to CRiSp","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to CRiSp","text":"Please note CRiSp project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://cityriverspaces.github.io/CRiSp/PULL_REQUEST_TEMPLATE.html","id":"what-type-of-pr-is-this-check-all-applicable","dir":"","previous_headings":"","what":"What type of PR is this? (check all applicable)","title":"NA","text":"Refactor Feature Bug Fix Optimization Documentation Update","code":""},{"path":[]},{"path":"https://cityriverspaces.github.io/CRiSp/PULL_REQUEST_TEMPLATE.html","id":"related-issues","dir":"","previous_headings":"","what":"Related Issues","title":"NA","text":"Related Issue # Closes #","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/PULL_REQUEST_TEMPLATE.html","id":"addedupdated-tests","dir":"","previous_headings":"","what":"Added/updated tests?","title":"NA","text":"encourage keep code coverage percentage 75% . Yes , : please replace line details tests included need help writing tests","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/PULL_REQUEST_TEMPLATE.html","id":"added-entry-in-changelog","dir":"","previous_headings":"","what":"Added entry in changelog?","title":"NA","text":"user-facing changes, add line describing changes NEWS.md Yes","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/articles/network-preparation.html","id":"input-data","dir":"Articles","previous_headings":"","what":"1. Input data","title":"3. Preparing the network for delineation","text":"article show set spatial network city using urban river corridor delineation. work OSM data city Bucharest provided CRiSp package. See get OSM data vignette(\"getting-osm-data\"). start loading OSM data. According delineation method, persistent physical structures need considered. Therefore, network contain streets railways OSM. Note: city question contains surface-level structures need included network, -ground metro lines, retrieve appropriate OSM tags following instructions vignette(\"getting-osm-data\") include network.","code":"streets <- bucharest_osm$streets railways <- bucharest_osm$railways"},{"path":"https://cityriverspaces.github.io/CRiSp/articles/network-preparation.html","id":"setting-up-the-network","dir":"Articles","previous_headings":"","what":"2. Setting up the network","title":"3. Preparing the network for delineation","text":"combining streets railway lines, create network object. able use network delineation, need flatten (, project bridges ground surface) add nodes intersections edges. function first identifies unique apparent intersections edges. injects points within edge geometries (linestrings), can raised network nodes cleaning step. Note: sfnetworks::st_network_blend used purpose, function adds external points one edge (closest one).","code":"network <- bind_rows(streets, railways) |>   as_sfnetwork(directed = FALSE) network_new <- flatten_network(network)"},{"path":"https://cityriverspaces.github.io/CRiSp/articles/network-preparation.html","id":"network-cleaning","dir":"Articles","previous_headings":"","what":"3. Network cleaning","title":"3. Preparing the network for delineation","text":"now perform standard cleaning tasks network: subdividing edges adding missing nodes, removing pseudo-nodes keeping main component network.","code":"network_cleaned <- clean_network(network_new)"},{"path":"https://cityriverspaces.github.io/CRiSp/articles/network-preparation.html","id":"visualise-cleaned-network","dir":"Articles","previous_headings":"","what":"4. Visualise cleaned network","title":"3. Preparing the network for delineation","text":"Visualize cleaned network:","code":"p_before <- ggplot() +   geom_sf(data = st_as_sf(network, \"edges\"), col = \"grey50\") +   geom_sf(data = st_as_sf(network, \"nodes\"), col = \"red\", size = 0.7) +   ggtitle(\"Network before preprocessing\\n\") +   coord_sf(xlim = c(425000, 426000),            ylim = c(4922200, 4923200),            expand = FALSE) +   theme_void()  p_after <- ggplot() +   geom_sf(data = st_as_sf(network_cleaned, \"edges\"), col = \"grey50\") +   geom_sf(data = st_as_sf(network_cleaned, \"nodes\"), col = \"red\", size = 0.7) +   ggtitle(\"Network after preprocessing\\n\") +   coord_sf(xlim = c(425000, 426000),            ylim = c(4922200, 4923200),            expand = FALSE) +   theme_void()  grid.arrange(p_before, p_after, ncol = 2)"},{"path":"https://cityriverspaces.github.io/CRiSp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Claudiu Forgaci. Author, maintainer. Francesco Nattino. Author. Netherlands eScience Center. Funder.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Forgaci C, Nattino F (2025). CRiSp: Automate Delineation Urban River Spaces. R package version 0.0.0.9000, https://cityriverspaces.github.io/CRiSp/.","code":"@Manual{,   title = {CRiSp: Automate the Delineation of Urban River Spaces},   author = {Claudiu Forgaci and Francesco Nattino},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://cityriverspaces.github.io/CRiSp/}, }"},{"path":"https://cityriverspaces.github.io/CRiSp/index.html","id":"crisp","dir":"","previous_headings":"","what":"Automate the Delineation of Urban River Spaces","title":"Automate the Delineation of Urban River Spaces","text":"CRiSp (City River Spaces) provides tools automate morphological delineation riverside urban areas.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automate the Delineation of Urban River Spaces","text":"can install development version CRiSp GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"CityRiverSpaces/CRiSp\")"},{"path":"https://cityriverspaces.github.io/CRiSp/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Automate the Delineation of Urban River Spaces","text":"basic example shows solve common problem:","code":"library(CRiSp)  # Set location parameters city_name <- \"Bucharest\" river_name <- \"Dâmbovița\" epsg_code <- 32635  # Get base layer for plotting bb <- get_osm_bb(city_name) streets <- get_osm_streets(bb, epsg_code)$geometry  # Delineate river corridor corridor <- delineate(city_name, river_name)$corridor  # Plot results plot(corridor, border = \"orange\", lwd = 3) plot(streets, add = TRUE)"},{"path":"https://cityriverspaces.github.io/CRiSp/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Automate the Delineation of Urban River Spaces","text":"look much forward contributions package. See Contributing Guide details. package released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/add_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Add weights to the network. — add_weights","title":"Add weights to the network. — add_weights","text":"prepare network search shortest paths node pairs. computed weights can account edge lenghts, distance target geometry, whether edge falls within specified region, aim exclude search shortest paths.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/add_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add weights to the network. — add_weights","text":"","code":"add_weights(   network,   target = NULL,   exclude_area = NULL,   penalty = 1000,   weight_name = \"weight\" )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/add_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add weights to the network. — add_weights","text":"network network object target Target geometry calculate distances , simple feature geometry exclude_area Area aim exclude shortest-path search, simple feature geometry penalty Penalty (network CRS' units) added edges falls within excluded area weight_name Name column edge table add weights","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/add_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add weights to the network. — add_weights","text":"network object weights added column edge table","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/add_weights.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add weights to the network. — add_weights","text":"-th edge network, weight \\(w_i\\) defined following way: $$  w_i = |e_i| + d_{geom}(e_i) + p_{buf}(e_i) $$ first term edge length, second one distance target geometry (target, optional) last one penalty added centroid edge falls within specified region (exclude_area, optional). Shortest paths calculated resulting network thus tend prefer edges close target avoid edges within exclude_area.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the bounding box from the x object — as_bbox","title":"Get the bounding box from the x object — as_bbox","text":"x CRS, WGS84 assumed.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bounding box from the x object — as_bbox","text":"","code":"as_bbox(x)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the bounding box from the x object — as_bbox","text":"x Simple feature object (compatible) bounding box, provided either matrix (x, y rows min, max columns) vector (xmin, ymin, xmax, ymax)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the bounding box from the x object — as_bbox","text":"bounding box returned sf::st_bbox()","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a network from a collection of line strings. — as_network","title":"Create a network from a collection of line strings. — as_network","text":"Create network collection line strings.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a network from a collection of line strings. — as_network","text":"","code":"as_network(edges, flatten = TRUE, clean = TRUE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a network from a collection of line strings. — as_network","text":"edges data frame network edges flatten Whether intersections edges converted nodes clean Whether general cleaning tasks run generated network (see clean_network() description tasks)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/as_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a network from a collection of line strings. — as_network","text":"spatial network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_delineation.html","id":null,"dir":"Reference","previous_headings":"","what":"CRiSp example delineation data for Bucharest — bucharest_delineation","title":"CRiSp example delineation data for Bucharest — bucharest_delineation","text":"Delineation generated bucharest_osm bucharest_dem input","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_delineation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CRiSp example delineation data for Bucharest — bucharest_delineation","text":"","code":"bucharest_delineation"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_delineation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CRiSp example delineation data for Bucharest — bucharest_delineation","text":"list sf objects representing: corridor corridor boundaries river Dâmbovița. segments Corridor segments river Dâmbovița. riverspace River space Dâmbovița.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"CRiSp example DEM data for Bucharest — bucharest_dem","title":"CRiSp example DEM data for Bucharest — bucharest_dem","text":"Copernicus GLO-30 Digital Elevation Model (DEM) cropped retiled cover city Bucharest. Used examples vignettes CRiSp package.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CRiSp example DEM data for Bucharest — bucharest_dem","text":"","code":"bucharest_dem"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_dem.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CRiSp example DEM data for Bucharest — bucharest_dem","text":"PackedSpatRaster object. Run terra::unwrap() extract DEM SpatRaster object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_dem.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CRiSp example DEM data for Bucharest — bucharest_dem","text":"https://spacedata.copernicus.eu/collections/copernicus-digital-elevation-model","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_osm.html","id":null,"dir":"Reference","previous_headings":"","what":"CRiSp example OSM data for Bucharest — bucharest_osm","title":"CRiSp example OSM data for Bucharest — bucharest_osm","text":"Data extracted OpenStreetMap examples used CRiSp package. datasets provided projected coordinate reference system (UTM 35), exception bounding box, provided latitude/ longitude coordinates (WGS84).","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_osm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CRiSp example OSM data for Bucharest — bucharest_osm","text":"","code":"bucharest_osm"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_osm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CRiSp example OSM data for Bucharest — bucharest_osm","text":"list sf objects representing: bb city bounding box. boundary administrative boundary Bucharest. river_centerline Dâmbovița river centerline. river_surface Dâmbovița river area. streets street network. railways railway network. buildings buildings corridor.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/bucharest_osm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CRiSp example OSM data for Bucharest — bucharest_osm","text":"https://www.openstreetmap.org/","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a buffer region to a sf object — buffer","title":"Apply a buffer region to a sf object — buffer","text":"input object lat/lon coordinates, buffer approximately applied first transforming object suitable projected CRS, expanding given buffer, transforming back lat/lon system.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a buffer region to a sf object — buffer","text":"","code":"buffer(obj, buffer_distance)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a buffer region to a sf object — buffer","text":"obj sf object buffer_distance Buffer distance meters","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a buffer region to a sf object — buffer","text":"Expanded sf object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cache_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the cache directory used by the package — cache_directory","title":"Return the cache directory used by the package — cache_directory","text":"default, cache directory equal ${HOME}/.cache/CRiSp. different directory can used setting environment variable CRISP_CACHE_DIRECTORY. can also done adding following line .Renviron file: CRISP_CACHE_DIRECTORY=/path//crisp/cache/dir.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cache_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the cache directory used by the package — cache_directory","text":"","code":"cache_directory()"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cache_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the cache directory used by the package — cache_directory","text":"cache directory used CRiSp.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cap_corridor.html","id":null,"dir":"Reference","previous_headings":"","what":"Cap the corridor by connecting the edge end points — cap_corridor","title":"Cap the corridor by connecting the edge end points — cap_corridor","text":"Cap corridor connecting edge end points","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cap_corridor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cap the corridor by connecting the edge end points — cap_corridor","text":"","code":"cap_corridor(edges, method = \"direct\", network = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cap_corridor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cap the corridor by connecting the edge end points — cap_corridor","text":"edges simple feature geometry representing corridor edges method method employed capping: direct (default): connect start points end points edges via straight segments shortest-path: find network-based shortest-path connections edge end points. network spatial network object, required method = 'shortest-path'","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/cap_corridor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cap the corridor by connecting the edge end points — cap_corridor","text":"simple feature geometry representing corridor (.e. polygon)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clean_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean a spatial network. — clean_network","title":"Clean a spatial network. — clean_network","text":"Subdivide edges adding missing nodes, simplify network (see simplify_network()), remove pseudo-nodes, discard main connected component.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clean_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean a spatial network. — clean_network","text":"","code":"clean_network(network)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clean_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean a spatial network. — clean_network","text":"network network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clean_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean a spatial network. — clean_network","text":"cleaned network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove cache files — clear_cache","title":"Remove cache files — clear_cache","text":"Remove files cache directory either given date entirely.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove cache files — clear_cache","text":"","code":"clear_cache(before_date = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clear_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove cache files — clear_cache","text":"before_date Date cache files removed provided Date","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove cache files — clear_cache","text":"List file paths removed files","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clip_and_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Clip lines to the extent of the corridor, and filter valid segment edges — clip_and_filter","title":"Clip lines to the extent of the corridor, and filter valid segment edges — clip_and_filter","text":"Lines intersect river cross corridor side side considered valid segment edges. group valid segment edges cross river nearby locations, select shortest line per cluster.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clip_and_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clip lines to the extent of the corridor, and filter valid segment edges — clip_and_filter","text":"","code":"clip_and_filter(lines, corridor, river_centerline)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clip_and_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clip lines to the extent of the corridor, and filter valid segment edges — clip_and_filter","text":"lines Candidate segment edges simple feature geometry corridor river corridor simple feature geometry river_centerline river centerline simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/clip_and_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clip lines to the extent of the corridor, and filter valid segment edges — clip_and_filter","text":"Candidate segment edges simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/combine_river_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine river centerline and surface — combine_river_features","title":"Combine river centerline and surface — combine_river_features","text":"Combine river centerline surface","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/combine_river_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine river centerline and surface — combine_river_features","text":"","code":"combine_river_features(river_centerline, river_surface)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/combine_river_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine river centerline and surface — combine_river_features","text":"river_centerline River line sfc_LINESTRING sfc_MULTILINESTRING river_surface River surface sfc_POLYGON sfc_MULTIPOLYGON","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/combine_river_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine river centerline and surface — combine_river_features","text":"Combined river sfc_LINESTRING","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a corridor edge on the spatial network. — corridor_edge","title":"Draw a corridor edge on the spatial network. — corridor_edge","text":"corridor edge drawn network shortest-path link start- end-point. weights shortest-path problem set account ) network edge lengths, b) distance initial target edge geometry, c) excluded area corridor edges aimed go . procedure iterative, excluded area accounted first iteration. identified corridor edge used target edge following iteration, goal prioritising \"straightening\" edge (overlap excluded area allowed).","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a corridor edge on the spatial network. — corridor_edge","text":"","code":"corridor_edge(   network,   end_points,   target_edge,   exclude_area = NULL,   max_iterations = 10 )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a corridor edge on the spatial network. — corridor_edge","text":"network spatial network used delineation end_points Target start- end-point target_edge Target edge geometry follow delineation exclude_area Region aim exclude delineation max_iterations Maximum number iterations employed refine corridor edges","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a corridor edge on the spatial network. — corridor_edge","text":"simple feature geometry representing edge (.e. linestring)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_end_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the corridor end points. — corridor_end_points","title":"Find the corridor end points. — corridor_end_points","text":"Determine extremes (start end point) river corridor using river center line spatial network used delineation. end points selected external river crossing edges network within area interest. river intersects area interest multiple times, longest intersecting segment considered .","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_end_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the corridor end points. — corridor_end_points","text":"","code":"corridor_end_points(river, network, aoi = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_end_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the corridor end points. — corridor_end_points","text":"river simple feature geometry representing river centerline network spatial network used delineation, either provided sfnetworks::sfnetwork sf::sf/sf::sfc object (edges ) aoi Area interest, provided bounding box polygon. given, taken bounding box spatial network","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/corridor_end_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the corridor end points. — corridor_end_points","text":"simple feature geometry including pair points","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/default_stac_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"Endpoint and collection ID of the default STAC collection where to access digital elevation model (DEM) data. This is the global Copernicus DEM 30 dataset hosted on AWS, as listed in the EarthSearch STAC API endpoint. Note that AWS credentials need to be set up in order to access the data (not the catalog). References:  EarthSearch STAC API Copernicus DEM AWS Copernicus DEM datasets Data license  — default_stac_dem","title":"Endpoint and collection ID of the default STAC collection where to access digital elevation model (DEM) data. This is the global Copernicus DEM 30 dataset hosted on AWS, as listed in the EarthSearch STAC API endpoint. Note that AWS credentials need to be set up in order to access the data (not the catalog). References:  EarthSearch STAC API Copernicus DEM AWS Copernicus DEM datasets Data license  — default_stac_dem","text":"Endpoint collection ID default STAC collection access digital elevation model (DEM) data. global Copernicus DEM 30 dataset hosted AWS, listed EarthSearch STAC API endpoint. Note AWS credentials need set order access data (catalog). References: EarthSearch STAC API Copernicus DEM AWS Copernicus DEM datasets Data license","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/default_stac_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endpoint and collection ID of the default STAC collection where to access digital elevation model (DEM) data. This is the global Copernicus DEM 30 dataset hosted on AWS, as listed in the EarthSearch STAC API endpoint. Note that AWS credentials need to be set up in order to access the data (not the catalog). References:  EarthSearch STAC API Copernicus DEM AWS Copernicus DEM datasets Data license  — default_stac_dem","text":"","code":"default_stac_dem"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/default_stac_dem.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Endpoint and collection ID of the default STAC collection where to access digital elevation model (DEM) data. This is the global Copernicus DEM 30 dataset hosted on AWS, as listed in the EarthSearch STAC API endpoint. Note that AWS credentials need to be set up in order to access the data (not the catalog). References:  EarthSearch STAC API Copernicus DEM AWS Copernicus DEM datasets Data license  — default_stac_dem","text":"object class list length 2.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate.html","id":null,"dir":"Reference","previous_headings":"","what":"Delineate a corridor around a river. — delineate","title":"Delineate a corridor around a river. — delineate","text":"Delineate corridor around river.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delineate a corridor around a river. — delineate","text":"","code":"delineate(   city_name,   river_name,   crs = NULL,   network_buffer = NULL,   buildings_buffer = NULL,   dem_buffer = 2500,   initial_method = \"valley\",   initial_buffer = NULL,   dem = NULL,   max_iterations = 10,   capping_method = \"direct\",   angle_threshold = 90,   corridor = TRUE,   segments = FALSE,   riverspace = FALSE,   force_download = FALSE,   ... )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delineate a corridor around a river. — delineate","text":"city_name place name string river_name river name string crs projected Coordinate Reference System (CRS) use. provided, suitable Universal Transverse Mercator (UTM) CRS selected network_buffer Add buffer (integer meters) around river retrieve additional data (streets, railways, etc.). Default 2500 m. buildings_buffer Add buffer (integer meters) around river retrieve additional data (buildings). Default 100 m. dem_buffer Add buffer (integer meters) around river retrieve DEM. Default 2500 m. initial_method method employed define initial river corridor geometry. See initial_corridor() available methods initial_buffer Buffer region add river geometry setup initial corridor (used initial_method \"buffer\") dem Digital elevation model (DEM) region (used initial_method \"valley\") max_iterations Maximum number iterations employed refine corridor edges (see corridor_edge()). capping_method method employed connect corridor edge end points (.e. \"cap\" corridor). See cap_corridor() available methods angle_threshold network edges forming angles threshold (degrees) considered forming segment edges. See delineate_segments() rcoins::stroke(). used segments TRUE. corridor Whether carry corridor delineation segments Whether carry corridor segmentation riverspace Whether carry riverspace delineation force_download Download data even cached data available ... Additional (optional) input arguments retrieving DEM dataset (see get_dem()). relevant initial_method \"valley\" dem NULL","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delineate a corridor around a river. — delineate","text":"list corridor, segments, riverspace geometries","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_corridor.html","id":null,"dir":"Reference","previous_headings":"","what":"Delineate a river corridor on a spatial network. — delineate_corridor","title":"Delineate a river corridor on a spatial network. — delineate_corridor","text":"corridor edges two river banks drawn provided spatial network starting initial definition corridor (based e.g. river valley).","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_corridor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delineate a river corridor on a spatial network. — delineate_corridor","text":"","code":"delineate_corridor(   network,   river_centerline,   river_surface,   aoi,   initial_method = \"valley\",   buffer = NULL,   dem = NULL,   max_iterations = 10,   capping_method = \"direct\" )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_corridor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delineate a river corridor on a spatial network. — delineate_corridor","text":"network spatial network used delineation river_centerline simple feature geometry representing river centerline river_surface simple feature geometry representing river surface aoi Area interest sf object bbox initial_method method employed define initial river corridor geometry. See initial_corridor() available methods buffer Buffer region add river geometry setup initial corridor (used initial_method \"buffer\") dem Digital elevation model (DEM) region (used initial_method \"valley\") max_iterations Maximum number iterations employed refine corridor edges (see corridor_edge()). capping_method method employed connect corridor edge end points (.e. \"cap\" corridor). See cap_corridor() available methods","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_corridor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delineate a river corridor on a spatial network. — delineate_corridor","text":"simple feature geometry representing river corridor","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_riverspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Delineate the space surrounding a river — delineate_riverspace","title":"Delineate the space surrounding a river — delineate_riverspace","text":"Delineate space surrounding river","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_riverspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delineate the space surrounding a river — delineate_riverspace","text":"","code":"delineate_riverspace(   occluders,   river,   density = 1/50,   ray_num = 41,   ray_length = 100 )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_riverspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delineate the space surrounding a river — delineate_riverspace","text":"occluders Geometry occluders river List river surface centerline density Density viewpoints ray_num Number rays ray_length Length rays meters","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_riverspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delineate the space surrounding a river — delineate_riverspace","text":"Polygon geometry riverspace","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_riverspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delineate the space surrounding a river — delineate_riverspace","text":"","code":"if (FALSE) { # \\dontrun{   delineate_riverspace(bucharest_osm$buildings, bucharest_osm$river_surface) } # }"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a river corridor into segments — delineate_segments","title":"Split a river corridor into segments — delineate_segments","text":"Segments defined corridor subregions separated river-crossing transversal lines form continuous strokes network.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a river corridor into segments — delineate_segments","text":"","code":"delineate_segments(corridor, network, river_centerline, angle_threshold = 90)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a river corridor into segments — delineate_segments","text":"corridor river corridor simple feature geometry network spatial network used segmentation river_centerline river centerline simple feature geometry angle_threshold consider angles threshold (degrees) form continuous strokes network. See rcoins::stroke() details.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/delineate_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a river corridor into segments — delineate_segments","text":"Segment polygons simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/dem_to_cog.html","id":null,"dir":"Reference","previous_headings":"","what":"Write DEM to cloud optimized GeoTiff file as specified location — dem_to_cog","title":"Write DEM to cloud optimized GeoTiff file as specified location — dem_to_cog","text":"Write DEM cloud optimized GeoTiff file specified location","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/dem_to_cog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write DEM to cloud optimized GeoTiff file as specified location — dem_to_cog","text":"","code":"dem_to_cog(dem, fpath, output_directory = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/dem_to_cog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write DEM to cloud optimized GeoTiff file as specified location — dem_to_cog","text":"dem write file fpath filepath output. output directory specified (see ) fpath parsed determine output directory output_directory file written. specified fpath treated filename .","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/dem_to_cog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write DEM to cloud optimized GeoTiff file as specified location — dem_to_cog","text":"input DEM. function used side-effect writing values file.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster the river crossings and select the shortest crossing per cluster — filter_clusters","title":"Cluster the river crossings and select the shortest crossing per cluster — filter_clusters","text":"Create groups edges crossing river nearby locations, using density-based clustering method (DBSCAN). make sure edges representing e.g. different lanes street treated part crossing. cluster, select shortest edge.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster the river crossings and select the shortest crossing per cluster — filter_clusters","text":"","code":"filter_clusters(crossings, river, eps = 100)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster the river crossings and select the shortest crossing per cluster — filter_clusters","text":"crossings Crossing edge geometries simple feature object river river geometry simple feature object eps DBSCAN parameter referring size (radius) distance neighborhood. approximate distance edges want consider single river crossing","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster the river crossings and select the shortest crossing per cluster — filter_clusters","text":"simple feature geometry including shortest edge per cluster","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a network keeping the only nodes that intersect a target geometry. — filter_network","title":"Subset a network keeping the only nodes that intersect a target geometry. — filter_network","text":"subsetting results multiple disconnected components, keep main one.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a network keeping the only nodes that intersect a target geometry. — filter_network","text":"","code":"filter_network(network, target)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a network keeping the only nodes that intersect a target geometry. — filter_network","text":"network network object target target geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/filter_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a network keeping the only nodes that intersect a target geometry. — filter_network","text":"spatial network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/flatten_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a network by adding points at apparent intersections. — flatten_network","title":"Flatten a network by adding points at apparent intersections. — flatten_network","text":"crossing edges identified, points intersections injected within edge geometries. Note injected points converted network nodes (can achieved via sfnetworks' sfnetworks::to_spatial_subdivision(), part tasks included clean_network().","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/flatten_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a network by adding points at apparent intersections. — flatten_network","text":"","code":"flatten_network(network)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/flatten_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a network by adding points at apparent intersections. — flatten_network","text":"network network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/flatten_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a network by adding points at apparent intersections. — flatten_network","text":"network object additional points intersections","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/flatten_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flatten a network by adding points at apparent intersections. — flatten_network","text":"functionality similar sfnetworks' sfnetworks::st_network_blend(), case external point injected closest edge.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cd_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Get characteristic value of distribution of cost distance — get_cd_char","title":"Get characteristic value of distribution of cost distance — get_cd_char","text":"Get characteristic value distribution cost distance","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cd_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get characteristic value of distribution of cost distance — get_cd_char","text":"","code":"get_cd_char(cd, method = \"mean\")"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cd_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get characteristic value of distribution of cost distance — get_cd_char","text":"cd cost distance raster data method function used derive caracteristic value (mean)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cd_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get characteristic value of distribution of cost distance — get_cd_char","text":"characteristic value cd raster","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cost_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive cost distance function from masked slope — get_cost_distance","title":"Derive cost distance function from masked slope — get_cost_distance","text":"Derive cost distance function masked slope","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cost_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive cost distance function from masked slope — get_cost_distance","text":"","code":"get_cost_distance(slope, river, target = 0)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cost_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive cost distance function from masked slope — get_cost_distance","text":"slope raster slope data river vector data river target value cost distance calculation","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_cost_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive cost distance function from masked slope — get_cost_distance","text":"raster cost distance","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"Access digital elevation model (DEM) for a given region — get_dem","title":"Access digital elevation model (DEM) for a given region — get_dem","text":"Access digital elevation model (DEM) given region","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access digital elevation model (DEM) for a given region — get_dem","text":"","code":"get_dem(   bb,   dem_source = \"STAC\",   stac_endpoint = NULL,   stac_collection = NULL,   crs = NULL,   force_download = FALSE )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access digital elevation model (DEM) for a given region — get_dem","text":"bb bounding box, provided either matrix (rows \"x\", \"y\", columns \"min\", \"max\") vector (\"xmin\", \"ymin\", \"xmax\", \"ymax\"), lat/lon coordinates (WGS84 coordinate referece system) dem_source Source DEM: \"STAC\" (default), DEM tiles searched SpatioTemporal Asset Catalog (STAC) end point, accessed mosaicked area interest stac_endpoint URL STAC API endpoint (used dem_source \"STAC\"). info, see get_stac_asset_urls() stac_collection Identifier STAC collection queried (used dem_source \"STAC\"). info, see get_stac_asset_urls() crs Coordinate reference system (CRS) transform DEM force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access digital elevation model (DEM) for a given region — get_dem","text":"DEM terra SpatRaster object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem_cache_filepath.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file path where to cache digital elevation model (DEM) data — get_dem_cache_filepath","title":"Get file path where to cache digital elevation model (DEM) data — get_dem_cache_filepath","text":"function returns file path serialize terra::SpatRaster object representing DEM retrieved set tiles reachable given URLs, cropped merged given bounding box. directory used one returned cache_directory().","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem_cache_filepath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file path where to cache digital elevation model (DEM) data — get_dem_cache_filepath","text":"","code":"get_dem_cache_filepath(tile_urls, bbox)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem_cache_filepath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file path where to cache digital elevation model (DEM) data — get_dem_cache_filepath","text":"tile_urls URL-paths reach DEM tiles bbox bounding box","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_dem_cache_filepath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file path where to cache digital elevation model (DEM) data — get_dem_cache_filepath","text":"character string representing file path","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_intersecting_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify network edges that are intersecting a geometry — get_intersecting_edges","title":"Identify network edges that are intersecting a geometry — get_intersecting_edges","text":"Identify network edges intersecting geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_intersecting_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify network edges that are intersecting a geometry — get_intersecting_edges","text":"","code":"get_intersecting_edges(network, geometry, index = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_intersecting_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify network edges that are intersecting a geometry — get_intersecting_edges","text":"network spatial network object geometry simple feature geometry index Whether return indices matchin edges geometries","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_intersecting_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify network edges that are intersecting a geometry — get_intersecting_edges","text":"Indices geometries edges intersecting given geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_bb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the bounding box of a city — get_osm_bb","title":"Get the bounding box of a city — get_osm_bb","text":"Get bounding box city","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the bounding box of a city — get_osm_bb","text":"","code":"get_osm_bb(city_name)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the bounding box of a city — get_osm_bb","text":"city_name name city","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the bounding box of a city — get_osm_bb","text":"bbox object bounding box city","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_bb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the bounding box of a city — get_osm_bb","text":"","code":"get_osm_bb(\"Bucharest\") #>     xmin     ymin     xmax     ymax  #> 25.96667 44.33425 26.22558 44.54140"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_buildings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OpenStreetMap buildings — get_osm_buildings","title":"Get OpenStreetMap buildings — get_osm_buildings","text":"Get buildings OpenStreetMap within given buffer around river.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_buildings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OpenStreetMap buildings — get_osm_buildings","text":"","code":"get_osm_buildings(aoi, crs = NULL, force_download = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_buildings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OpenStreetMap buildings — get_osm_buildings","text":"aoi Area interest sf object bbox crs Coordinate reference system EPSG code force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_buildings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OpenStreetMap buildings — get_osm_buildings","text":"sf object buildings","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_city_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the city boundary from OpenStreetMap — get_osm_city_boundary","title":"Get the city boundary from OpenStreetMap — get_osm_city_boundary","text":"function retrieves city boundary OpenStreetMap based bounding box OSM tags \"place:city\" \"boundary:administrative\". result filtered city name.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_city_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the city boundary from OpenStreetMap — get_osm_city_boundary","text":"","code":"get_osm_city_boundary(   bb,   city_name,   crs = NULL,   multiple = FALSE,   force_download = FALSE )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_city_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the city boundary from OpenStreetMap — get_osm_city_boundary","text":"bb Bounding box class bbox city_name character string name city crs Coordinate reference system EPSG code multiple logical indicating multiple city boundaries returned. default, first one returned. force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_city_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the city boundary from OpenStreetMap — get_osm_city_boundary","text":"sf object city boundary","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_city_boundary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the city boundary from OpenStreetMap — get_osm_city_boundary","text":"","code":"bb <- get_osm_bb(\"Bucharest\") crs <- get_utm_zone(bb) get_osm_city_boundary(bb, \"Bucharest\", crs) #> Saving data to cache directory: /home/runner/.cache/CRiSp/osmdata_place_city_25.967_44.334_26.226_44.541.rds #> Geometry set for 1 feature  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 417769.7 ymin: 4909348 xmax: 438364 ymax: 4932424 #> Projected CRS: WGS 84 / UTM zone 35N #> MULTIPOLYGON (((427347.8 4913289, 427386.6 4913..."},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_railways.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OpenStreetMap railways — get_osm_railways","title":"Get OpenStreetMap railways — get_osm_railways","text":"Get OpenStreetMap railways","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_railways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OpenStreetMap railways — get_osm_railways","text":"","code":"get_osm_railways(aoi, crs = NULL, force_download = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_railways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OpenStreetMap railways — get_osm_railways","text":"aoi Area interest sf object bbox crs Coordinate reference system EPSG code force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_railways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OpenStreetMap railways — get_osm_railways","text":"sf object railways","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_railways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OpenStreetMap railways — get_osm_railways","text":"","code":"bb <- get_osm_bb(\"Bucharest\") crs <- get_utm_zone(bb) get_osm_railways(bb, crs) #> Saving data to cache directory: /home/runner/.cache/CRiSp/osmdata_railway_rail_25.967_44.334_26.226_44.541.rds #> Simple feature collection with 1031 features and 1 field #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 408330 ymin: 4901482 xmax: 439360.8 ymax: 4937371 #> Projected CRS: WGS 84 / UTM zone 35N #> First 10 features: #>          type                       geometry #> 4902946  rail LINESTRING (425916.8 492225... #> 13242940 rail LINESTRING (417865.3 493110... #> 14449609 rail LINESTRING (426605.8 492626... #> 14449614 rail LINESTRING (426663.4 492628... #> 14449620 rail LINESTRING (427060.1 492640... #> 14449623 rail LINESTRING (429683.8 492635... #> 15238558 rail LINESTRING (425642.6 492596... #> 15238565 rail LINESTRING (424267.7 492519... #> 15238574 rail LINESTRING (425392.8 492588... #> 15243277 rail LINESTRING (435989.3 491190..."},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the river centreline and surface from OpenStreetMap — get_osm_river","title":"Get the river centreline and surface from OpenStreetMap — get_osm_river","text":"Get river centreline surface OpenStreetMap","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the river centreline and surface from OpenStreetMap — get_osm_river","text":"","code":"get_osm_river(bb, river_name, crs = NULL, force_download = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the river centreline and surface from OpenStreetMap — get_osm_river","text":"bb Bounding box class bbox river_name name river crs Coordinate reference system EPSG code force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the river centreline and surface from OpenStreetMap — get_osm_river","text":"list river centreline surface","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the river centreline and surface from OpenStreetMap — get_osm_river","text":"","code":"bb <- get_osm_bb(\"Bucharest\") crs <- get_utm_zone(bb) get_osm_river(bb, \"Dâmbovița\", crs) #> Saving data to cache directory: /home/runner/.cache/CRiSp/osmdata_waterway_river_25.967_44.334_26.226_44.541.rds #> Saving data to cache directory: /home/runner/.cache/CRiSp/osmdata_natural_water_25.967_44.334_26.226_44.541.rds #> $centerline #> Geometry set for 1 feature  #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 342590.9 ymin: 4897268 xmax: 457820 ymax: 5048321 #> Projected CRS: WGS 84 / UTM zone 35N #> MULTILINESTRING ((342590.9 5043751, 342603 5043... #>  #> $surface #> Geometry set for 1 feature  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 418720.8 ymin: 4915950 xmax: 438326.9 ymax: 4924248 #> Projected CRS: WGS 84 / UTM zone 35N #> MULTIPOLYGON (((427868.6 4920273, 427882.5 4920... #>"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_streets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OpenStreetMap streets — get_osm_streets","title":"Get OpenStreetMap streets — get_osm_streets","text":"Get OpenStreetMap streets","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_streets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OpenStreetMap streets — get_osm_streets","text":"","code":"get_osm_streets(aoi, crs = NULL, highway_values = NULL, force_download = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_streets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OpenStreetMap streets — get_osm_streets","text":"aoi Area interest sf object bbox crs Coordinate reference system EPSG code highway_values character vector highway values retrieve. left NULL, function retrieves following values: \"motorway\", \"trunk\", \"primary\", \"secondary\", \"tertiary\" force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_streets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OpenStreetMap streets — get_osm_streets","text":"sf object streets","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osm_streets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OpenStreetMap streets — get_osm_streets","text":"","code":"bb <- get_osm_bb(\"Bucharest\") crs <- get_utm_zone(bb) get_osm_streets(bb, crs) #> Saving data to cache directory: /home/runner/.cache/CRiSp/osmdata_highway_motorway_trunk_primary_secondary_tertiary_motorway_link_trunk_link_primary_link_secondary_link_tertiary_link_25.967_44.334_26.226_44.541.rds #> Simple feature collection with 7930 features and 1 field #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 416680.4 ymin: 4907301 xmax: 439997 ymax: 4938941 #> Projected CRS: WGS 84 / UTM zone 35N #> First 10 features: #>              type                       geometry #> 1349     tertiary LINESTRING (427899.3 492440... #> 1467     tertiary LINESTRING (427853.8 492445... #> 1760      primary LINESTRING (427348.7 492401... #> 1915      primary LINESTRING (432042.4 491860... #> 2955804  tertiary LINESTRING (432099.2 491999... #> 3039873   primary LINESTRING (435628.7 492117... #> 3043515 secondary LINESTRING (425064.1 491877... #> 3043519   primary LINESTRING (425537.9 491747... #> 3043522  tertiary LINESTRING (425078.3 491876... #> 3058607   primary LINESTRING (426355.1 492506..."},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve OpenStreetMap data for a given location — get_osmdata","title":"Retrieve OpenStreetMap data for a given location — get_osmdata","text":"Retrieve OpenStreetMap data given location, including city boundary, river centreline surface, streets, railways, buildings","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve OpenStreetMap data for a given location — get_osmdata","text":"","code":"get_osmdata(   city_name,   river_name,   network_buffer = NULL,   buildings_buffer = NULL,   crs = NULL,   force_download = FALSE )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve OpenStreetMap data for a given location — get_osmdata","text":"city_name character string name city. river_name character string name river. network_buffer Buffer distance meters around river get streets railways, default 0 means network data downloaded buildings_buffer Buffer distance meters around river get buildings, default 0 means buildings data downloaded crs integer EPSG code projection. CRS specified, default UTM zone city. force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve OpenStreetMap data for a given location — get_osmdata","text":"list retrieved OpenStreetMap data sets given location","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve OpenStreetMap data for a given location — get_osmdata","text":"","code":"get_osmdata(\"Bucharest\", \"Dâmbovița\") #> Warning: Loading data from cache directory: /home/runner/.cache/CRiSp/osmdata_place_city_25.967_44.334_26.226_44.541.rds #> Warning: Loading data from cache directory: /home/runner/.cache/CRiSp/osmdata_waterway_river_25.967_44.334_26.226_44.541.rds #> Warning: Loading data from cache directory: /home/runner/.cache/CRiSp/osmdata_natural_water_25.967_44.334_26.226_44.541.rds #> $boundary #> Geometry set for 1 feature  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 417769.7 ymin: 4909348 xmax: 438364 ymax: 4932424 #> Projected CRS: WGS 84 / UTM zone 35N #> MULTIPOLYGON (((427347.8 4913289, 427386.6 4913... #>  #> $river_centerline #> Geometry set for 1 feature  #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 342590.9 ymin: 4897268 xmax: 457820 ymax: 5048321 #> Projected CRS: WGS 84 / UTM zone 35N #> MULTILINESTRING ((342590.9 5043751, 342603 5043... #>  #> $river_surface #> Geometry set for 1 feature  #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 418720.8 ymin: 4915950 xmax: 438326.9 ymax: 4924248 #> Projected CRS: WGS 84 / UTM zone 35N #> MULTIPOLYGON (((427868.6 4920273, 427882.5 4920... #>"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata_cache_filepath.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the file path where to cache results of an Overpass API query — get_osmdata_cache_filepath","title":"Get the file path where to cache results of an Overpass API query — get_osmdata_cache_filepath","text":"function returns file path serialize osdata_sf object given key:value pair bounding box. directory used one returned cache_directory().","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata_cache_filepath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the file path where to cache results of an Overpass API query — get_osmdata_cache_filepath","text":"","code":"get_osmdata_cache_filepath(key, value, bbox)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata_cache_filepath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the file path where to cache results of an Overpass API query — get_osmdata_cache_filepath","text":"key character string key filter data value character string value filter data bbox bounding box","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_osmdata_cache_filepath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the file path where to cache results of an Overpass API query — get_osmdata_cache_filepath","text":"character string representing file path","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_river_aoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an area of interest (aoi) around a river, cropping to the bounding box of the city — get_river_aoi","title":"Get an area of interest (aoi) around a river, cropping to the bounding box of the city — get_river_aoi","text":"Get area interest (aoi) around river, cropping bounding box city","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_river_aoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an area of interest (aoi) around a river, cropping to the bounding box of the city — get_river_aoi","text":"","code":"get_river_aoi(river, city_bbox, buffer_distance = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_river_aoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an area of interest (aoi) around a river, cropping to the bounding box of the city — get_river_aoi","text":"river list river centreline surface city_bbox Bounding box around city buffer_distance Buffer size around river","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_river_aoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an area of interest (aoi) around a river, cropping to the bounding box of the city — get_river_aoi","text":"sf bbox object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_river_aoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an area of interest (aoi) around a river, cropping to the bounding box of the city — get_river_aoi","text":"","code":"bb <- get_osm_bb(\"Bucharest\") river <- get_osm_river(bb, \"Dâmbovița\") #> Warning: Loading data from cache directory: /home/runner/.cache/CRiSp/osmdata_waterway_river_25.967_44.334_26.226_44.541.rds #> Warning: Loading data from cache directory: /home/runner/.cache/CRiSp/osmdata_natural_water_25.967_44.334_26.226_44.541.rds get_river_aoi(river, bb, buffer_distance = 100) #> Geometry set for 1 feature  #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 25.96667 ymin: 44.393 xmax: 26.22558 ymax: 44.46791 #> Geodetic CRS:  WGS 84 #> POLYGON ((25.96667 44.46249, 25.96672 44.46246,..."},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive slope as percentage from DEM — get_slope","title":"Derive slope as percentage from DEM — get_slope","text":"makes use terrain function terra package","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive slope as percentage from DEM — get_slope","text":"","code":"get_slope(dem)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive slope as percentage from DEM — get_slope","text":"dem raster data dem","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive slope as percentage from DEM — get_slope","text":"raster derived slope dem extent","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_stac_asset_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the URLs of all the assets intersecting a bbox from a STAC API — get_stac_asset_urls","title":"Retrieve the URLs of all the assets intersecting a bbox from a STAC API — get_stac_asset_urls","text":"Retrieve URLs assets intersecting bbox STAC API","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_stac_asset_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the URLs of all the assets intersecting a bbox from a STAC API — get_stac_asset_urls","text":"","code":"get_stac_asset_urls(bb, endpoint = NULL, collection = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_stac_asset_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the URLs of all the assets intersecting a bbox from a STAC API — get_stac_asset_urls","text":"bb bounding box, provided either matrix (rows \"x\", \"y\", columns \"min\", \"max\") vector (\"xmin\", \"ymin\", \"xmax\", \"ymax\"), lat/lon coordinates (WGS84 coordinate referece system) endpoint URL STAC API endpoint. provided together stac_collection, leave blank use defaults (see default_stac_dem) collection Identifier STAC collection queried. provided together stac_endpoint, leave blank use defaults (see default_stac_dem)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_stac_asset_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the URLs of all the assets intersecting a bbox from a STAC API — get_stac_asset_urls","text":"list URLs assets collection overlapping specified bounding box","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_utm_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the UTM zone of a spatial object — get_utm_zone","title":"Get the UTM zone of a spatial object — get_utm_zone","text":"Get UTM zone spatial object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_utm_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the UTM zone of a spatial object — get_utm_zone","text":"","code":"get_utm_zone(x)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_utm_zone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the UTM zone of a spatial object — get_utm_zone","text":"x Bounding box geometry object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_utm_zone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the UTM zone of a spatial object — get_utm_zone","text":"EPSG UTM zone","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the river valley from the DEM — get_valley","title":"Extract the river valley from the DEM — get_valley","text":"slope digital elevation model (DEM) used friction (cost) surface compute cost distance grid cell raster river. characteristic value (default: mean) cost distance distribution region surrounding river (default: buffer region 2 km) calculated, used threshold cost-distance surface. resulting area \"polygonized\" obtain valley boundary simple feature geometry.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the river valley from the DEM — get_valley","text":"","code":"get_valley(dem, river)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the river valley from the DEM — get_valley","text":"dem Digital elevation model region river simple feature geometry representing river","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the river valley from the DEM — get_valley","text":"River valley simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create vector/polygon representation of valley without holes from raster mask — get_valley_polygon","title":"Create vector/polygon representation of valley without holes from raster mask — get_valley_polygon","text":"Create vector/polygon representation valley without holes raster mask","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create vector/polygon representation of valley without holes from raster mask — get_valley_polygon","text":"","code":"get_valley_polygon(valley_mask)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create vector/polygon representation of valley without holes from raster mask — get_valley_polygon","text":"valley_mask raster mask valley pixels","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create vector/polygon representation of valley without holes from raster mask — get_valley_polygon","text":"(multi)polygon representation valley area simple feature geometry without holes","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_no_hole.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove possible holes from valley geometry — get_valley_polygon_no_hole","title":"Remove possible holes from valley geometry — get_valley_polygon_no_hole","text":"Remove possible holes valley geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_no_hole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove possible holes from valley geometry — get_valley_polygon_no_hole","text":"","code":"get_valley_polygon_no_hole(valley_polygon)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_no_hole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove possible holes from valley geometry — get_valley_polygon_no_hole","text":"valley_polygon st_geometry valley region","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_no_hole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove possible holes from valley geometry — get_valley_polygon_no_hole","text":"(multi)polygon geometry valley","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Create vector/polygon representation of valley raster mask — get_valley_polygon_raw","title":"Create vector/polygon representation of valley raster mask — get_valley_polygon_raw","text":"Create vector/polygon representation valley raster mask","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create vector/polygon representation of valley raster mask — get_valley_polygon_raw","text":"","code":"get_valley_polygon_raw(valley_mask)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create vector/polygon representation of valley raster mask — get_valley_polygon_raw","text":"valley_mask raster mask valley pixels","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/get_valley_polygon_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create vector/polygon representation of valley raster mask — get_valley_polygon_raw","text":"polygon representation valley area st_geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_corridor.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw the initial geometry of a river corridor. — initial_corridor","title":"Draw the initial geometry of a river corridor. — initial_corridor","text":"Draw initial geometry river corridor.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_corridor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw the initial geometry of a river corridor. — initial_corridor","text":"","code":"initial_corridor(   river,   method = \"valley\",   buffer = NULL,   dem = NULL,   bbox = NULL )"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_corridor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw the initial geometry of a river corridor. — initial_corridor","text":"river simple feature geometry representing river method method employed draw initial river corridor: \"buffer\": add fixed buffer region river geometry (see river_buffer()) \"valley\" (default): use river valley boundary, estimated provided digital elevation model (DEM, see get_valley() details implementation) buffer Buffer region add river geometry (used initial_method \"buffer\") dem Digital elevation model (DEM) region (used initial_method \"valley\") bbox Bounding box defining extent area interest","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_corridor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw the initial geometry of a river corridor. — initial_corridor","text":"simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the initial edges of the river corridor — initial_edges","title":"Identify the initial edges of the river corridor — initial_edges","text":"defined splitting initial corridor boundary sub-regions river forms area interest","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the initial edges of the river corridor — initial_edges","text":"","code":"initial_edges(corridor_initial, regions)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the initial edges of the river corridor — initial_edges","text":"corridor_initial simple feature geometry representing area initial corridor regions simple feature geometry representing sub-regions formed cutting area interest along river","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/initial_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the initial edges of the river corridor — initial_edges","text":"simple feature geometry representing initial corridor edges","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve DEM data from a list of STAC assets — load_dem","title":"Retrieve DEM data from a list of STAC assets — load_dem","text":"Load DEM data list tiles, crop merge using given bounding box create raster DEM specified region. Results cached, new queries input parameters loaded disk.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve DEM data from a list of STAC assets — load_dem","text":"","code":"load_dem(bb, tile_urls, force_download = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_dem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve DEM data from a list of STAC assets — load_dem","text":"bb bounding box, provided either matrix (rows \"x\", \"y\", columns \"min\", \"max\") vector (\"xmin\", \"ymin\", \"xmax\", \"ymax\") tile_urls list tiles read DEM data force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_dem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve DEM data from a list of STAC assets — load_dem","text":"Raster DEM, retrieved retiled given bounding box","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Load raster data from one or multiple (remote) files — load_raster","title":"Load raster data from one or multiple (remote) files — load_raster","text":"bounding box provided, file(s) cropped given extent. resulting rasters merged using terra::merge.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load raster data from one or multiple (remote) files — load_raster","text":"","code":"load_raster(urlpaths, bbox = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load raster data from one or multiple (remote) files — load_raster","text":"urlpaths Path URL raster file(s) bbox bounding box","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/load_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load raster data from one or multiple (remote) files — load_raster","text":"Raster data terra::SpatRaster object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_cost_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask out river regions incl. a buffer in cost distance raster data — mask_cost_distance","title":"Mask out river regions incl. a buffer in cost distance raster data — mask_cost_distance","text":"Mask river regions incl. buffer cost distance raster data","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_cost_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask out river regions incl. a buffer in cost distance raster data — mask_cost_distance","text":"","code":"mask_cost_distance(cd, river, buffer = 2000)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_cost_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask out river regions incl. a buffer in cost distance raster data — mask_cost_distance","text":"cd cost distance raster river vector/polygon buffer size buffer around river polygon additionally mask","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_cost_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask out river regions incl. a buffer in cost distance raster data — mask_cost_distance","text":"cd raster river+BUFFER pixels masked","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask slope raster, setting the slope to zero for the pixels overlapping the river area. — mask_slope","title":"Mask slope raster, setting the slope to zero for the pixels overlapping the river area. — mask_slope","text":"Mask slope raster, setting slope zero pixels overlapping river area.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask slope raster, setting the slope to zero for the pixels overlapping the river area. — mask_slope","text":"","code":"mask_slope(slope, river, lthresh = 0.001, target = 0)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask slope raster, setting the slope to zero for the pixels overlapping the river area. — mask_slope","text":"slope raster data slope river vector/polygon data river lthresh lower numerival threshold consider slope non-zero target value set pixels overlapping river area","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/mask_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask slope raster, setting the slope to zero for the pixels overlapping the river area. — mask_slope","text":"updated slope raster","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a block to one of the target geometries — merge_block","title":"Merge a block to one of the target geometries — merge_block","text":"Merge block one target geometries","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a block to one of the target geometries — merge_block","text":"","code":"merge_block(targets, block, method = \"longest-intersection\")"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a block to one of the target geometries — merge_block","text":"targets Sequence target blocks simple feature geometry block Block merge simple feature geometry method Strategy merging, choose \"smallest\" (merge smallest adjacent block) \"longest-intersection\" (merge block shares longest intersection )","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a block to one of the target geometries — merge_block","text":"Blocks merged specified one simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge a set of blocks to adjacent ones — merge_blocks","title":"Merge a set of blocks to adjacent ones — merge_blocks","text":"Adjacent blocks defined blocks neighbours blocks need merged, intersect via (Multi)LineString. consider blocks merge one one, smallest largest, merging blocks recursively.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge a set of blocks to adjacent ones — merge_blocks","text":"","code":"merge_blocks(blocks, to_merge, method = \"longest-intersection\")"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge a set of blocks to adjacent ones — merge_blocks","text":"blocks Simple feature geometry representing blocks to_merge Indices blocks merge method Strategy merging, see merge_block()","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/merge_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge a set of blocks to adjacent ones — merge_blocks","text":"Blocks merged specified ones simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/nearest_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the node in a network that is closest to a target geometry. — nearest_node","title":"Find the node in a network that is closest to a target geometry. — nearest_node","text":"Find node network closest target geometry.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/nearest_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the node in a network that is closest to a target geometry. — nearest_node","text":"","code":"nearest_node(network, target)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/nearest_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the node in a network that is closest to a target geometry. — nearest_node","text":"network network object target target geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/nearest_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the node in a network that is closest to a target geometry. — nearest_node","text":"node network simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_as_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve OpenStreetMap data as sf object — osmdata_as_sf","title":"Retrieve OpenStreetMap data as sf object — osmdata_as_sf","text":"Query Overpass API key:value pair within given bounding box (provided lat/lon coordiates). Results cached, new queries input parameters loaded disk.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_as_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve OpenStreetMap data as sf object — osmdata_as_sf","text":"","code":"osmdata_as_sf(key, value, aoi, force_download = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_as_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve OpenStreetMap data as sf object — osmdata_as_sf","text":"key character string key filter data value character string value filter data aoi area interest, provided either sf object \"bbox\" vector (\"xmin\", \"ymin\", \"xmax\", \"ymax\") force_download Download data even cached data available","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_as_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve OpenStreetMap data as sf object — osmdata_as_sf","text":"sf object retrieved OpenStreetMap data","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the Overpass API for a key:value pair within a bounding box — osmdata_query","title":"Query the Overpass API for a key:value pair within a bounding box — osmdata_query","text":"Query Overpass API key:value pair within bounding box","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the Overpass API for a key:value pair within a bounding box — osmdata_query","text":"","code":"osmdata_query(key, value, bb)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the Overpass API for a key:value pair within a bounding box — osmdata_query","text":"key character string key filter data value character string value filter data. value = \"\" means get features available OSM specified bounding box bb bounding box, lat/lon coordinates","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/osmdata_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the Overpass API for a key:value pair within a bounding box — osmdata_query","text":"sf object retrieved OpenStreetMap data","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/read_data_from_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from the cache directory — read_data_from_cache","title":"Read data from the cache directory — read_data_from_cache","text":"directory used caching see cache_directory().","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/read_data_from_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from the cache directory — read_data_from_cache","text":"","code":"read_data_from_cache(filepath, unwrap = FALSE, quiet = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/read_data_from_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from the cache directory — read_data_from_cache","text":"filepath Path file deserialize character string unwrap Whether deserialized object \"unpacked\" (required terra::SpatRaster objects) quiet Omit warning cache file loaded","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/read_data_from_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from the cache directory — read_data_from_cache","text":"Object deserialized","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/refine_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Refine candidate segments via recursive merging — refine_segments","title":"Refine candidate segments via recursive merging — refine_segments","text":"Recursively merge candidate segments provided (\"blocks\"), intersect river centerline sides corridor.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/refine_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Refine candidate segments via recursive merging — refine_segments","text":"","code":"refine_segments(blocks, river_centerline, corridor)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/refine_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Refine candidate segments via recursive merging — refine_segments","text":"blocks Candidate segments simple feature geometry river_centerline river centerline simple feature geometry corridor river corridor simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/refine_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Refine candidate segments via recursive merging — refine_segments","text":"Refined corridor segments simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/reproject.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproject a raster or vector dataset to the specified coordinate reference system (CRS) — reproject","title":"Reproject a raster or vector dataset to the specified coordinate reference system (CRS) — reproject","text":"Reproject raster vector dataset specified coordinate reference system (CRS)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/reproject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reproject a raster or vector dataset to the specified coordinate reference system (CRS) — reproject","text":"","code":"reproject(x, crs, ...)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/reproject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reproject a raster or vector dataset to the specified coordinate reference system (CRS) — reproject","text":"x Raster vector object crs CRS projected ... Optional arguments raster vector reproject functions","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/reproject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reproject a raster or vector dataset to the specified coordinate reference system (CRS) — reproject","text":"Object reprojected specified CRS","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/river_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a corridor as a fixed buffer region around a river. — river_buffer","title":"Draw a corridor as a fixed buffer region around a river. — river_buffer","text":"river geometry may consist multiple spatial features, merged applying buffer.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/river_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a corridor as a fixed buffer region around a river. — river_buffer","text":"","code":"river_buffer(river, buffer_distance, bbox = NULL)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/river_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a corridor as a fixed buffer region around a river. — river_buffer","text":"river simple feature geometry representing river buffer_distance Size buffer (river's CRS units) bbox Bounding box defining extent area interest","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/river_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a corridor as a fixed buffer region around a river. — river_buffer","text":"simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/set_units_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the units of x as the units of y — set_units_like","title":"Set the units of x as the units of y — set_units_like","text":"Set units x units y","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/set_units_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the units of x as the units of y — set_units_like","text":"","code":"set_units_like(x, y)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/set_units_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the units of x as the units of y — set_units_like","text":"x x (can unitless) y y (can unitless)","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/set_units_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the units of x as the units of y — set_units_like","text":"Object x units y","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/shortest_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Find shortest path between a pair of nodes in the network. — shortest_path","title":"Find shortest path between a pair of nodes in the network. — shortest_path","text":"Find shortest path pair nodes network.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/shortest_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find shortest path between a pair of nodes in the network. — shortest_path","text":"","code":"shortest_path(network, from, to, weights = \"weight\")"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/shortest_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find shortest path between a pair of nodes in the network. — shortest_path","text":"network spatial network object Start node End node weights Name column network edge table take weigths","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/shortest_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find shortest path between a pair of nodes in the network. — shortest_path","text":"simple feature geometry","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/simplify_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify a spatial network by removing multiple edges and loops. — simplify_network","title":"Simplify a spatial network by removing multiple edges and loops. — simplify_network","text":"Simplify graph, removing loops double-edge connections following approach. dropping multiple edges, keep shortest ones.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/simplify_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify a spatial network by removing multiple edges and loops. — simplify_network","text":"","code":"simplify_network(network)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/simplify_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify a spatial network by removing multiple edges and loops. — simplify_network","text":"network network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/simplify_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify a spatial network by removing multiple edges and loops. — simplify_network","text":"simplifed network object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/smooth_dem.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatially smooth dem by (window) filtering — smooth_dem","title":"Spatially smooth dem by (window) filtering — smooth_dem","text":"Spatially smooth dem (window) filtering","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/smooth_dem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatially smooth dem by (window) filtering — smooth_dem","text":"","code":"smooth_dem(dem, method = \"median\", window = 5)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/smooth_dem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatially smooth dem by (window) filtering — smooth_dem","text":"dem raster data dem method smoothing function used, e.g. \"median\", accepted terra::focal() window size smoothing kernel","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/smooth_dem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatially smooth dem by (window) filtering — smooth_dem","text":"filtered dem","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_aoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the area of interest (AoI) by a river. — split_aoi","title":"Split the area of interest (AoI) by a river. — split_aoi","text":"Return fragments produced. two fragments obtained, return two largest fragments.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_aoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the area of interest (AoI) by a river. — split_aoi","text":"","code":"split_aoi(bbox, river)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_aoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the area of interest (AoI) by a river. — split_aoi","text":"bbox Bounding box defining extent area interest river simple feature geometry representing river centerline","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_aoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split the area of interest (AoI) by a river. — split_aoi","text":"simple feature geometry set two areas interest","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a geometry along a (multi)linestring. — split_by","title":"Split a geometry along a (multi)linestring. — split_by","text":"Split geometry along (multi)linestring.","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a geometry along a (multi)linestring. — split_by","text":"","code":"split_by(geometry, line, boundary = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a geometry along a (multi)linestring. — split_by","text":"geometry Geometry split line Dividing (multi)linestring boundary Whether return split boundary instead regions","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/split_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a geometry along a (multi)linestring. — split_by","text":"simple feature object","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/write_data_to_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data to the cache directory — write_data_to_cache","title":"Write data to the cache directory — write_data_to_cache","text":"Write object serialised form (RDS) cache directory. directory used caching see cache_directory().","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/write_data_to_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data to the cache directory — write_data_to_cache","text":"","code":"write_data_to_cache(x, filepath, wrap = FALSE, quiet = FALSE)"},{"path":"https://cityriverspaces.github.io/CRiSp/reference/write_data_to_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data to the cache directory — write_data_to_cache","text":"x Object serialize file filepath Path serialize x, character string wrap Whether object \"packed\" serialization (required terra::SpatRaster objects) quiet Omit message cache file written","code":""},{"path":"https://cityriverspaces.github.io/CRiSp/reference/write_data_to_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write data to the cache directory — write_data_to_cache","text":"NULL invisibly","code":""}]
